Summary:
TextInput can't be made programmatically editable while it already has focus
Description:
This is the scenario:
1) the component instance start with editable="false"
2) user moves focus to component using the keyboard
3) a particular key press activates editability of the field (through a custom keyDown listener)
4) no cursor displayed, can't type in the field
Notes:
this is happening with the default (TLF-based) TextInput skin
moving away focus and getting back to it (with keyboard or mouse, or even with an ALT-TAB) cause the component to start behaving correctly
if the instance has been previously editable, the behavior doesn't reproduce
if the focus is moved to the component through a mouse click the issue is not triggered
As a workaround, I tried a callLater(textInput.setFocus) on my custom keyDown listener, without success. Replacing the callLater with a setTimeout also doesn't work (in both cases, it seems that its setFocus() override of RichEditableText does nothing because the check on the compose state of the text container manager.
Status:
OPEN
Priority:
Minor
Resolution:
Unresolved
Affects_version:
Apache Flex 4.11.0
Fix_version:
None
Component:
Spark: TextInput
Label:
None
Environment:
Windows 7 64bit
Attachment number:
0
Assignee:
Unassigned
Reporter:
Cosma Colanicchia
Create date:
23/Sep/13 12:08
Update date:
17/Oct/13 07:42
Resolved date:

