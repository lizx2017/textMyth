Summary:
Compiling in automation changes the way an apps mouse handlers work
Description:
Steps to reproduce:
1. Create an app that has two overlapping canvases, each with a button in them, such that each button is under the other canvas
2. Run w/o automation, when you hover over the buttons they highlight as expected
3. Run w/ automation
Actual Results:
When you hover over the buttons they do not hightlight as expected
Expected Results:
They highlight
Workaround (if any):
You can set mouseEnabled property to false for both the canvases and run the application.Both the buttons will be highlighted.
None
The problem is that automation is adding a mouse handler on the canvases. Any container in Flex when a mouse handler is added adds a "mouse shield", which will block mouse events on anything its covering. When adding the mouse handlers, AT needs to somehow block the Flex components from adding this mouse shield (unless the app would have caused it to be added) because it should not trap events that it would not normally get.
The fix would be to introduce mx_internal add/remove event listener methods in Container that AT would call that would call super.add/remove and bypass the check that creates the mouse shield.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
Adobe Flex SDK Previ
Fix_version:
None
Component:
Component Dispatch
Label:
None
Environment:
Affected OS(s): All OS Platforms
Attachment number:
0
Assignee:
Adobe JIRA
Reporter:
Adobe JIRA
Create date:
31/Jul/08 09:29
Update date:
20/May/11 04:42
Resolved date:
20/Apr/09 05:04
