Summary:
spark.components.RichEditableText can lose its accessibilityImplementation, hiding its content from screen readers when its content is set programmatically
Description:
Steps to reproduce:
1. Create an MXML application containing either spark.components.RichEditableText or spark.components.TextArea, like the example attached.
2. Add a Button to replace the RichEditableText text or content using ActionScript on click.
3. Publish the project and open it in InternetExplorer on Windows with either a screen reader or MSAA testing tool running.
4. Test the application using a screen reader or inspect it with an MSAA testing tool.
Actual Results:
Before clicking on the button to replace the content of the RichEditableText component, it should show up to assistive technology with the role "editable text." The content should be editable, and it will be the accValue of the editable text file.
After clicking on the button to replace the content of the RichEditableText component, where the editable text used to be, assistive technology will show an object with the role "graphic." The content will no longer be readable or editable.
Expected Results:
RichEditableText should continue to be represented by the RichEditableTextAccImpl.
Workaround (if any):
Edit RichEditableText.commitProperties() method by adding the following line:
if (!accessibilityImplementation) initializeAccessibility();
This will attach an instance of RichEditableTextAccImpl as the accessibilityImplementation for the component.
Status:
RESOLVED
Priority:
Minor
Resolution:
Fixed
Affects_version:
Adobe Flex SDK Previ
Fix_version:
Adobe Flex SDK Next
Component:
Accessibility
Label:
None
Environment:
Affected OS(s): Windows
Attachment number:
0
Assignee:
Adobe JIRA
Reporter:
Adobe JIRA
Create date:
19/Oct/11 15:42
Update date:
28/Oct/11 11:49
Resolved date:
28/Oct/11 11:49
