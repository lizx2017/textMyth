Summary:
MX DataGrid default column sort breaks on NULL complex fields
Description:
Steps to reproduce:
1.Create an mx:DataGrid with an ArrayCollection dataProvider populated with Objects that have nested objects.
2.Set one of the properties of a nested object to null
3.Try sorting (by clicking on the header field) on a column that displays that property (eg. "address.city")
Actual Results:
TypeError: Error #1009: Cannot access a property or method of a null object reference.
thrown in DataGridColumn.complexColumnSortCompare
the code does not check if resulting value is null
Note: DataGridColumn.deriveComplexColumnData function also does not check if any component of complex property path is null
Expected Results:
Grid sorted on that column, nulls handled corretly (first in ascending order)
Workaround (if any):
Creating a custom compare function
Example MXML:
<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
xmlns:s="library://ns.adobe.com/flex/spark"
xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600">
<fx:Script>
<![CDATA[
[Bindable]
public var data: Array = [
{name: "Item1", address: {city: "City1"}},
{name: "Item2", address: {city: null}},
];
]]
>
</fx:Script>
<fx:Declarations>
</fx:Declarations>
<mx:DataGrid dataProvider="
{data}
">
<mx:columns>
<mx:DataGridColumn headerText="Name" dataField="name" />
<mx:DataGridColumn headerText="City" dataField="address.city" />
</mx:columns>
</mx:DataGrid>
</s:Application>
Status:
RESOLVED
Priority:
Major
Resolution:
Fixed
Affects_version:
Adobe Flex SDK Previ
Fix_version:
Apache Flex 4.10.0
Component:
mx: DataGrid
Label:
EasyFix
Environment:
Affected OS(s): All OS Platforms
Attachment number:
0
Assignee:
Cyrill Zadra
Reporter:
Adobe JIRA
Create date:
08/Nov/11 03:17
Update date:
25/Mar/13 09:21
Resolved date:
25/Mar/13 09:21
