Summary:
Don't reset the depth of a ButtonBar renderer when focus is lost
Description:
Steps to reproduce:
Create the following application
<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
xmlns:s="library://ns.adobe.com/flex/spark"
xmlns:mx="library://ns.adobe.com/flex/mx">
<s:ButtonBar>
<s:layout>
<s:ButtonBarHorizontalLayout gap="-20"/>
</s:layout>
<s:dataProvider>
<s:ArrayList>
<fx:Object label="test1"/>
<fx:Object label="test2"/>
<fx:Object label="test3"/>
<fx:Object label="test4"/>
<fx:Object label="test5"/>
</s:ArrayList>
</s:dataProvider>
</s:ButtonBar>
</s:Application>
Note the negative gap between the buttons. It seems recently code has been added to bring the selected item to the front, this is great as this is what a user would want, but when the app loses focus the depth of the selected button is set back to 0, and the ordering defaults back to the displayList order, which isn't what a user would want.
Actual Results: When focus is lost the selected button appears behind other buttons higher in the displayList than itself.
Expected Results: The selected button should always remain on top whether the ButtonBar has focus or not.
Workaround (if any): ButtonBarBase line 442
/**
@private
Called when the focus is gained/lost by tabbing in or out.
*/
override public function drawFocus(isFocused:Boolean):void
Unknown macro: { const renderer}
There is no need to set the depth of renderers here.
Status:
OPEN
Priority:
Major
Resolution:
Unresolved
Affects_version:
Adobe Flex SDK Previ
Fix_version:
None
Component:
Spark: ButtonBar
Label:
None
Environment:
Affected OS(s): All OS Platforms
Attachment number:
0
Assignee:
Unassigned
Reporter:
Adobe JIRA
Create date:
10/Oct/11 08:55
Update date:
10/Oct/11 08:55
Resolved date:

