Summary:
Spark DataGrid: Inconsistent automatic column population
Description:
Steps to reproduce:
1. Run the following code as-is
2. Press run once. Observe grid does not populate columns.
3. Press run again. Observe grid does populate columns.
4. Run the following code after uncommenting line in initializeDataProvider()
5. Press run once. Observe grid does populate columns.
Actual Results:
Step 2 does not populate columns.
Expected Results:
Step 2 populates column.
Workaround (if any):
Set dataProvider at initialization.
Importance:
My concern here isn't the population of a DataGrid's columns from a data provider that had data for one line of code.
My concern is the different behavior based upon when dataProvider is assigned.
I found this failing to reproduce a couple of ArrayCollection issues to report, so I'm not certain the problem is the Spark DataGrid.
Code:
<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
xmlns:s="library://ns.adobe.com/flex/spark"
xmlns:mx="library://ns.adobe.com/flex/mx">
<fx:Declarations>
<!-- Place non-visual elements (e.g., services, value objects) here -->
</fx:Declarations>
<fx:Script>
<![CDATA[
import mx.collections.ArrayCollection;
import mx.events.CollectionEvent;
private static const data1:* =
{ label:"a", value:"1" }
;
[Bindable]
private var dataProvider:ArrayCollection = new ArrayCollection();
private function initializeDataProvider():void
{ // Enable this to always update grid columns on test() // grid.dataProvider = dataProvider; }
private function test():void
{ grid.dataProvider = dataProvider; dataProvider.addItem(data1); dataProvider.removeAll(); // Enable this to never update grid columns on test() // grid.dataProvider = null; }
]]
>
</fx:Script>
<s:VGroup width="100%" height="100%">
<s:DataGrid id="grid" initialize="initializeDataProvider();" />
<s:Button id="push" label="Push" click="test();" />
<s:Label text="Press push once." />
<s:Label text="Since data is added before removed, it should" />
<s:Label text="always populate on the first try columns." />
</s:VGroup>
</s:Application>
Status:
OPEN
Priority:
Major
Resolution:
Unresolved
Affects_version:
Adobe Flex SDK 4.5.1
Fix_version:
None
Component:
Spark: DataGrid
Label:
None
Environment:
Affected OS(s): Windows
Attachment number:
0
Assignee:
Unassigned
Reporter:
Adobe JIRA
Create date:
16/Sep/11 13:05
Update date:
16/Sep/11 13:05
Resolved date:

