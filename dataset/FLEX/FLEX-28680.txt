Summary:
ButtonBar's IndexChangeEvent.CHANGING preventDefault doesn't prevent a visual change
Description:
Steps to reproduce:
1. Create a dummy air project
2. Paste the following code:
<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication
xmlns:fx="http://ns.adobe.com/mxml/2009"
xmlns:mx="library://ns.adobe.com/flex/mx"
xmlns:s="library://ns.adobe.com/flex/spark">
<fx:Script>
<![CDATA[
import spark.events.IndexChangeEvent;
protected function buttonbar1_changeHandler(event:IndexChangeEvent):void
{ //Throw an error bb.selectedItem.label; }
protected function bb_changingHandler(event:IndexChangeEvent):void
{
//Prevent the error from being thrown
event.preventDefault();
/* //But, the button is still de-selected, even though prevent default is supposed
//to cancel the commit of the new selection??
try
{ var blah:* = bb.dataGroup.getElementAt(event.oldIndex); blah.selected = true; }
catch (e:Error)
{
} */
}
]]
>
</fx:Script>
<s:ButtonBar
id="bb"
selectedIndex="0"
change="buttonbar1_changeHandler(event)"
changing="bb_changingHandler(event)">
<s:dataProvider>
<s:ArrayCollection>
<fx:Object label="1"/>
<fx:Object label="2"/>
<fx:Object label="3"/>
</s:ArrayCollection>
</s:dataProvider>
</s:ButtonBar>
</s:WindowedApplication>
Actual Results:
The selected item is lost when you click the already selected item.
Expected Results:
The selected item should not be visually affected when the preventing the default on the CHANGING event.
Workaround (if any):
See http://wp.me/pCFcS-6K
Status:
CLOSED
Priority:
Major
Resolution:
Not A Problem
Affects_version:
Adobe Flex SDK Previ
Fix_version:
None
Component:
Spark: ButtonBar
Label:
None
Environment:
Affected OS(s): All OS Platforms
Attachment number:
0
Assignee:
Adobe JIRA
Reporter:
Adobe JIRA
Create date:
30/Sep/11 13:08
Update date:
07/Oct/11 14:17
Resolved date:
30/Sep/11 14:13
