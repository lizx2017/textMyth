Summary:
Adding a subclass of a Vector's type to the Vector in MXML results in an internal build error
Description:
The subclass doen't get detected as a dependency.
Example MXML that causes build error:
<fx:Vector type="mx.core.UIComponent">
<s:Button/>
</fx:Vector>
I discovered that it will work fine if another Button is added elsewhere in the MXML document. Somehow the Vector's items aren't being checked for dependencies.
It may be fixed by passing the VectorNode to the same analyze() function used for ArrayNode in the private DependencyAnalyzer class in InterfaceCompiler at the end of the analyze() function for VectorNode. There is no analyze() function for ArrayNode, so it must fall back to the version with the parameter typed as Node. The analyze() function for VectorNode only grabs the Vector's type as a dependency and doesn't look at the items added to the Vector.
Status:
RESOLVED
Priority:
Major
Resolution:
Fixed
Affects_version:
Apache Flex 4.14.1
Fix_version:
Apache Flex 4.15.0
Component:
MXML Compiler
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Josh Tynjala
Create date:
26/May/15 23:53
Update date:
26/May/15 23:54
Resolved date:
26/May/15 23:54
