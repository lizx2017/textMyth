Summary:
Application Crashes in Range.as
Description:
Application crashes inside of Range.as script:
protected function nearestValidValue(value:Number, interval:Number):Number
{
if (interval == 0)
return Math.max(minimum, Math.min(maximum, value));
var maxValue:Number = maximum - minimum;
var scale:Number = 1;
value -= minimum;
// If interval isn't an integer, there's a possibility that the floating point
// approximation of value or value/interval will be slightly larger or smaller
// than the real value. This can lead to errors in calculations like
// floor(value/interval)*interval, which one might expect to just equal value,
// when value is an exact multiple of interval. Not so if value=0.58 and
// interval=0.01, in that case the calculation yields 0.57! To avoid problems,
// we scale by the implicit precision of the interval and then round. For
// example if interval=0.01, then we scale by 100.
******************************************************************************************************
CRASHES INSIDE THIS - INTERVAL is 7.9999999999 ***********************************
parts[1] is invalid as the array only has 1 element parts[0] *********************
******************************************************************************************************
if (interval != Math.round(interval))
{ const parts:Array = (new String(1 + interval)).split("."); scale = Math.pow(10, parts[1].length); maxValue *= scale; value = Math.round(value * scale); interval = Math.round(interval * scale); }
var lower:Number = Math.max(0, Math.floor(value / interval) * interval);
var upper:Number = Math.min(maxValue, Math.floor((value + interval) / interval) * interval);
var validValue:Number = ((value - lower) >= ((upper - lower) / 2)) ? upper : lower;
return (validValue / scale) + minimum;
}
ERROR *****
TypeError: Error #1010: A term is undefined and has no properties.
at spark.components.supportClasses::Range/nearestValidValue()[E:\dev\4.x\frameworks\projects\spark\src\spark\components\supportClasses\Range.as:449]
at spark.components.supportClasses::Range/commitProperties()[E:\dev\4.x\frameworks\projects\spark\src\spark\components\supportClasses\Range.as:362]
at spark.components.supportClasses::ScrollBarBase/commitProperties()[E:\dev\4.x\frameworks\projects\spark\src\spark\components\supportClasses\ScrollBarBase.as:554]
at mx.core::UIComponent/validateProperties()[E:\dev\4.x\frameworks\projects\framework\src\mx\core\UIComponent.as:7933]
at mx.managers::LayoutManager/validateProperties()[E:\dev\4.x\frameworks\projects\framework\src\mx\managers\LayoutManager.as:572]
at mx.managers::LayoutManager/doPhasedInstantiation()[E:\dev\4.x\frameworks\projects\framework\src\mx\managers\LayoutManager.as:700]
at mx.managers::LayoutManager/doPhasedInstantiationCallback()[E:\dev\4.x\frameworks\projects\framework\src\mx\managers\LayoutManager.as:1072]
Status:
OPEN
Priority:
Major
Resolution:
Unresolved
Affects_version:
Adobe Flex SDK Previ
Fix_version:
None
Component:
Spark: Range
Label:
None
Environment:
Affected OS(s): Windows
Attachment number:
0
Assignee:
Unassigned
Reporter:
Adobe JIRA
Create date:
27/Oct/11 08:39
Update date:
27/Oct/11 23:22
Resolved date:

