Summary:
Glyphlist .properties are not ordered
Description:
Currently we use .properties files to load the glyph lists, however Java's Properties is not ordered (the properties are stored in a Hashtable) and so the glyphs are not read in the correct order.
This results in incorrect encoding when calling GlyphList.unicodeToName(), because the Adobe glyph lists are ordered: the default mapping comes first, and auxiliary mappings follow it, for example:
space=0020
spacehackarabic=0020
Currently in PDFBox, GlyphList.unicodeToName(0x20) returns "spacehackarabic", which is wrong, we always want the first entry in the glyph list.
We need to move away from using .properties and instead just use Adobe's existing glyph list format, the only difference is that we switch = for ;.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
2.0.0
Fix_version:
2.0.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
John Hewson
Reporter:
John Hewson
Create date:
24/Sep/14 01:50
Update date:
17/Mar/16 19:07
Resolved date:
26/Sep/14 08:48
