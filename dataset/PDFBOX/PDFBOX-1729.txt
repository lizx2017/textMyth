Summary:
java.util.zip.DataFormatException: incorrect header check
Description:
After parsing the file from PDFBOX-1606 with the "old" parser, and doing RenderUtil.convertToImage() I get this:
27.09.2013 16:56:06.685 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.691 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.692 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.692 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
IOException for file PDFBOX-1606.pdf
27.09.2013 16:56:06.693 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
java.io.IOException
27.09.2013 16:56:06.693 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.693 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.694 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.694 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
27.09.2013 16:56:06.695 ERROR [main] org.apache.pdfbox.filter.FlateFilter:134 - FlateFilter: stop reading corrupt stream due to a DataFormatException
at org.apache.pdfbox.filter.FlateFilter.decode(FlateFilter.java:136)
at org.apache.pdfbox.cos.COSStream.doDecode(COSStream.java:317)
at org.apache.pdfbox.cos.COSStream.doDecode(COSStream.java:237)
at org.apache.pdfbox.cos.COSStream.getUnfilteredStream(COSStream.java:170)
at org.apache.pdfbox.pdfparser.PDFStreamParser.<init>(PDFStreamParser.java:108)
at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)
at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:219)
at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:199)
at org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:153)
at org.apache.pdfbox.util.RenderUtil.renderPage(RenderUtil.java:221)
at org.apache.pdfbox.util.RenderUtil.convertToImage(RenderUtil.java:185)
at org.apache.pdfbox.util.RenderUtil.convertToImage(RenderUtil.java:143)
at pdfboxpageimageextraction.ExtractImages.doPdf(ExtractImages.java:162)
at pdfboxpageimageextraction.ExtractImages.main(ExtractImages.java:98)
Caused by: java.util.zip.DataFormatException: incorrect header check
at java.util.zip.Inflater.inflateBytes(Native Method)
at java.util.zip.Inflater.inflate(Inflater.java:259)
at java.util.zip.Inflater.inflate(Inflater.java:280)
at org.apache.pdfbox.filter.FlateFilter.decompress(FlateFilter.java:167)
at org.apache.pdfbox.filter.FlateFilter.decode(FlateFilter.java:96)
... 13 more
It does not happen when I use the nonSequential parser. I don't really care much about this, except that I can't use the file for tests because these use the "old" parser. I therefore suggest:
1) @deprecate the load() call
2) change TestImageIOUtils.java so that it uses the loadNonSeq call
Status:
CLOSED
Priority:
Minor
Resolution:
Cannot Reproduce
Affects_version:
2.0.0
Fix_version:
None
Component:
Parsing
Label:
None
Environment:
windows xp, widnows 7
Attachment number:
0
Assignee:
Andreas Lehmk√ºhler
Reporter:
Tilman Hausherr
Create date:
27/Sep/13 15:09
Update date:
07/Feb/14 10:24
Resolved date:
27/Oct/13 17:22
