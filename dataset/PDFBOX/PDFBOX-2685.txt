Summary:
COS 'primitive' types are mutable
Description:
From Andrea Vacondio:
They are cached and they are mutable so this:
        COSInteger cosint = COSInteger.get(10);
        cosint.setValue(50);
        //lets move to a totally unrelated part of my software
        System.out.println(COSInteger.get(10));
prints COSInteger(50) so basically I ask for a 10 and get a 50, isn't it weird (and error prone)? ... or the way around, I call cosint.setValue(50) at some point in the software and that makes it a 50 everywhere I used COSInteger.get(10).
That's of course also true for the other mutable attributes setDirect and setNeedToBeUpdate.
Status:
OPEN
Priority:
Critical
Resolution:
Unresolved
Affects_version:
1.8.8, 1.8.9, 2.0.0
Fix_version:
3.0.0 PDFBox
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Maruan Sahyoun
Reporter:
Tilman Hausherr
Create date:
14/Feb/15 11:53
Update date:
25/Mar/17 18:09
Resolved date:

