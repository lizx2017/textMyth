Summary:
Bad space calculation in text extraction
Description:
Some debug output from attached reduced file:
2.0:
spaceWidthText: 0.25
fontSizeText: 12.0
horizontalScalingText: 1.0
textRenderingMatrix.getScalingFactorX(): 12.0, textRenderingMatrix: [12.0,0.0,0.0,12.0,100.0,700.0]
ctm.getScalingFactorX(): 1.0
spaceWidthDisplay: 36.0

String[100.0,91.0 fs=12.0 xscale=12.0 height=7.8808603 space=36.0 width=8.003998]B
1.8:
spaceWidthText: 0.25
fontSizeText: 12.0
horizontalScalingText: 1.0
textMatrix.getXScale(): 1.0, textMatrix: [[1.0,0.0,0.0][0.0,1.0,0.0][100.0,700.0,1.0]]
ctm.getXScale(): 1.0
spaceWidthDisp: 3.0

String[100.0,91.0 fs=12.0 xscale=12.0 height=7.884 space=3.0 width=8.003998]B
stream content is
1 0 0 1 0 0 cm
n
BT
/F12 12 Tf
1 0 0 1 100 700 Tm
(B) Tj
ET
The cause is somewhat similar to PDFBOX-3019, a factor is used twice. In 2.0, the fontSize is already calculated into the "parameters" Matrix object, which is used to calculate "textRenderingMatrix". In 1.8, textStateParameters is set similarly, but not used in the calculation of spaceWidthDisp.
The problem was discovered because of different text extractions.
The problem did not appear in PDFBOX-3019 because fontSizeText was 1.
The fix also solves the problem I mentioned at the end of PDFBOX-3038.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
2.0.0
Fix_version:
2.0.0
Component:
Text extraction
Label:
regression
Environment:

Attachment number:
0
Assignee:
Tilman Hausherr
Reporter:
Tilman Hausherr
Create date:
21/Oct/15 16:46
Update date:
17/Mar/16 19:07
Resolved date:
21/Oct/15 17:05
