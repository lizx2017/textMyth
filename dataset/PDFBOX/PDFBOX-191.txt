Summary:
PDFStreamEngine(Properties) should use propertyNames()
Description:
[imported from SourceForge]
http://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1544943
Originally submitted by thib_gc on 2006-08-22 15:40.
The PDFStreamEngine(Properties) constructor uses
properties.keySet().iterator() to create a map of
operators based on the client-supplied custom operator
processor class names. This has the disadvantage of
only iterating over the proper keys of the properties
parameter, ignoring any keys that are defined by the
Properties instance's defaults (if present).
If a client of PDFStreamEngine wishes to have the
default behavior be anything other than the built-in
"no-op", which exists because of the null check in
processOperator(PDFOperator, List), the only choice is
to supply to the constructor a Properties object with
no defaults that includes all possible PDF operators,
attaching the name of a class extending
OperatorProcessor with the desired default behavior to
all keys that need it. Another conceivable possibility
would be to override PDFStreamEngine(Properties) and
processOperator(PDFOperator, List).
Neither of these options seem desirable, nor do they
enable clients to take advantage of defaults
recursively in Properties without flattening the
chained Properties objects.
Instead, the PDFStreamEngine(Properties) constructor
could use properties.propertyNames() (the die-hard
Enumeration from the Properties API), which guarantees
enumerating recursively over Properties objects.
Status:
CLOSED
Priority:
Minor
Resolution:
Duplicate
Affects_version:
None
Fix_version:
None
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Andreas Lehmk√ºhler
Reporter:
Anonymous
Create date:
22/Aug/06 22:40
Update date:
12/Feb/11 18:59
Resolved date:
07/Dec/10 06:42
