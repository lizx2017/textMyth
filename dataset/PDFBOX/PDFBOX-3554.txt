Summary:
Crash in kerning calculations
Description:
A bug in the usage of the result of a binary search causes a crash in the calculation of kerning information. Here's the patch:
--- a/fontbox/src/main/java/org/apache/fontbox/ttf/KerningSubtable.java
+++ b/fontbox/src/main/java/org/apache/fontbox/ttf/KerningSubtable.java
@@ -292,7 +292,7 @@ public class KerningSubtable
             index = Arrays.binarySearch(pairs, searchRange, pairs.length, key, this);
             if (index >= 0)
             {
-                return pairs[searchRange + index][2];
+                return pairs[index][2];
             }
             return 0;
         }
Explanation: The searchRange parameter is passed to binarySearch(), but the result of binarySearch() is relative to the start of the array, not the passed-in start. So no need to add searchRange to the result. Adding causes the indexing to go off the end of the array.
Status:
CLOSED
Priority:
Major
Resolution:
Duplicate
Affects_version:
2.0.0
Fix_version:
None
Component:
FontBox
Label:
easyfix
Environment:

Attachment number:
0
Assignee:
Andreas Lehmk√ºhler
Reporter:
Lawrence Kesteloot
Create date:
04/Nov/16 06:01
Update date:
04/Nov/16 07:00
Resolved date:
04/Nov/16 07:00
