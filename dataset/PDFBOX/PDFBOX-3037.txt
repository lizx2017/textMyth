Summary:
Text extraction decodes image files
Description:
I get this with text extraction of file 001131.pdf:
java.io.IOException: Could not read JPEG 2000 (JPX) image
 at org.apache.pdfbox.filter.JPXFilter.readJPX(JPXFilter.java:90)
 at org.apache.pdfbox.filter.JPXFilter.decode(JPXFilter.java:59)
 at org.apache.pdfbox.cos.COSInputStream.create(COSInputStream.java:69)
 at org.apache.pdfbox.cos.COSStream.createInputStream(COSStream.java:163)
 at org.apache.pdfbox.pdmodel.common.PDStream.createInputStream(PDStream.java:234)
 at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.<init>(PDImageXObject.java:145)
 at org.apache.pdfbox.pdmodel.graphics.PDXObject.createXObject(PDXObject.java:69)
 at org.apache.pdfbox.pdmodel.PDResources.getXObject(PDResources.java:342)
 at org.apache.pdfbox.contentstream.operator.DrawObject.process(DrawObject.java:50)
 at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:819)
 at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:476)
 at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:448)
 at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:155)
This shouldn't happen, i.e. we shouldn't even try to decode images when extracting text, this is a waste of time and memory.
The cause is this in DrawObject:
PDXObject xobject =  context.getResources().getXObject(name);
it results in the object being created and its contents being decoded.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
2.0.0
Fix_version:
2.0.0
Component:
Text extraction
Label:
None
Environment:

Attachment number:
0
Assignee:
Tilman Hausherr
Reporter:
Tilman Hausherr
Create date:
20/Oct/15 16:08
Update date:
17/Mar/16 19:08
Resolved date:
20/Oct/15 16:39
