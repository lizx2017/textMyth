Summary:
Stream parsing still incorrect if length value is wrong
Description:
From issue PDFBOX-1333 - "In 1.7.0 stream parsing in BaseParser was optimized to use length value if available. The advantage is faster parsing and independence of 'endstream' bytes sequences in stream. However the disadvantage is that streams with wrong length values cannot be parsed anymore" - etc.
This issue was marked as fixed now that COSStreams can once again be parsed by reading all the way to 'endstream'. However, the resulting COSStream object still contains the expected length, not the true length. When parsing the COSStream with a PDFStreamParser, the call to COSStream#getUnfilteredStream uses getLength() instead of getLengthWritten to limit the amount of data that can be read. This can truncate the stream and means that incorrect length values still lead to missing data, and so limits the usefulness of the last fix. Changing the call to getLengthWritten should solve the problem.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
1.6.0, 1.8.4
Fix_version:
1.8.5, 2.0.0
Component:
Parsing
Label:
None
Environment:

Attachment number:
0
Assignee:
Tilman Hausherr
Reporter:
Andrew Olsen
Create date:
07/Apr/14 09:56
Update date:
28/Aug/14 22:22
Resolved date:
08/Apr/14 16:58
