Summary:
processOperator breaks contract - never throws IOException
Description:
PDFStreamEngine.processOperator documents to throw IOException. However, all Exceptions are swallowed (in a catch Exception clause) which makes it impossible for us to handle:
/**
This is used to handle an operation.
*
@param operator The operation to perform.
@param arguments The list of arguments.
*
@throws IOException If there is an error processing the operation.
*/
protected void processOperator( PDFOperator operator, List arguments ) throws IOException
{
try
{
String operation = operator.getOperation();
OperatorProcessor processor = (OperatorProcessor)operators.get( operation );
if( processor != null ) { processor.setContext(this); processor.process( operator, arguments ); }
else
Unknown macro: { if (!unsupportedOperators.contains(operation)) { log.info("unsupported/disabled operation: " + operation); unsupportedOperators.add(operation); } }
}
catch (Exception e)
{ log.warn(e, e); }
}
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
2.0.0
Fix_version:
2.0.0
Component:
Documentation
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Jimmy Juncker
Create date:
25/Oct/10 11:59
Update date:
17/Mar/16 19:07
Resolved date:
21/Oct/14 02:50
