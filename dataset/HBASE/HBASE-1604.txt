Summary:
HBaseClient.getConnection() may return a broken connection without throwing an exception
Description:
Consider the code of HBaseClient.getConnection():
    connection.setupIOstreams();
    return connection;
  }
Now consider the setupIOstreams() method:
      } catch (IOException e) {
        markClosed(e);
        close(); // Removes the connection from pool
      }
So, if something goes wrong inside of setupIOstreams, then after its invocation the connection will be broken (will have its .in and .out streams nulls, for example) and will not be in pool, but will still be returned from the getConnection method and cause further harm (for example, cause a NullPointerException in further calls such as sendCall, which use the in and out streams).
Suggested fix: make the setupIOstreams method rethrow the IOException inside that catch block.
Reproduction: Restart the hbase master and/or regionserver while a client program is running, and put a breakpoint into that catch block.
I actually observed a situation where the broken connection stayed in the pool, but I don't yet know how to reproduce it or what is the reason. I am investigating the issue, but for now at least the aforementioned bug should be fixed.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
0.19.2
Fix_version:
0.20.0
Component:
Client
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Eugene Kirpichov
Create date:
02/Jul/09 12:02
Update date:
13/Sep/09 22:24
Resolved date:
02/Aug/09 23:30
