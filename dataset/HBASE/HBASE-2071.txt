Summary:
Order matters when adding columns to a scan, using some of the add column methods.
Description:
When adding columns to a Scan, using "addColumns" or "addColumn" (with single argument) the order in which they are added matters. When adding columns as distinct family and qualifier (2 arguments) this is not a problem. It is only a problem when adding as a single argument.
For example:
user> (scan "t1" {:columns [ "f1:" "f1:hello" ] })
cols are: [f1: f1:hello]
col: f1: –
col: f1:hello – world
user> (scan "t1" {:columns [ "f1:hello" "f1:" ] })
cols are: [f1:hello f1:]
col: f1:hello – world
col: f1: – v1
In the first call to "scan," the arguments are in lexicographic order, and this results in the value associated with "f1" to be left out. In the second call to "scan," the arguments are in reverse order, and the results are valid.
Sorry the example is in Clojure. In essence, this is what's happending:
This doesn't work:
myScan.addColumn("f1:")
myScan.addColumn("f1:hello")
This works:
myScan.addColumn("f1:hello")
myScan.addColumn("f1:")
I have omitted the code which creates a scanner with this scan, returns the results, and then prints them.
Status:
RESOLVED
Priority:
Minor
Resolution:
Invalid
Affects_version:
0.20.2
Fix_version:
None
Component:
Client
Label:
None
Environment:
java, clojure
Attachment number:
0
Assignee:
Unassigned
Reporter:
Kyle Oba
Create date:
28/Dec/09 00:09
Update date:
08/Jun/14 21:55
Resolved date:
08/Jun/14 21:55
