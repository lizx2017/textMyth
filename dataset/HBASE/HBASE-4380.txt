Summary:
large scan caching size causes RS to throw OOME
Description:
If the hbase application specifies a large caching size via Scan.setCaching(...), RS will try to accumulate enough rows before returning to the client. This could blow up RS memory. In TableInputFormat scenario, we have couple mappers with large caching size, thus RS memory usage goes up quickly.
RS perhaps should take memory usage into account, for example, return less results per HRegionInterface.next(long scannerId, int numberOfRows) call in the case of low memory.
Status:
RESOLVED
Priority:
Major
Resolution:
Duplicate
Affects_version:
None
Fix_version:
None
Component:
regionserver
Label:
None
Environment:

Attachment number:
0
Assignee:
Ming Ma
Reporter:
Ming Ma
Create date:
13/Sep/11 04:45
Update date:
13/Sep/11 17:51
Resolved date:
13/Sep/11 05:13
