Summary:
HTable$ClientScanner modifies its input parameters
Description:
HTable$ClientScanner modifies the Scan that is passed to it on construction.
I would consider this to be bad programming practice because if I wanted to use the same Scan object to scan multiple tables, I would not expect one table scan to effect the other, but it does.
If input parameters are going to be modified either now or later it should be called out loudly in the javadoc. The only way I found this behavior was by creating an application that did scan multiple tables using the same Scan object and having 'wierd stuff' happen.
In my opinion, if you want to modify a field in an input parameter, you should:
make a copy of the original object
optionally return a reference to the copy.
There is no javadoc about this behavior. The only thing I found was a comment in HTable$ClientScanner:
    // HEADSUP: The scan internal start row can change as we move through table.
Is there a use case that requires this behavior? If so, I would recommend that ResultScanner (and the classes that implement it) provide an accessor to the mutable copy of the input Scan and leave the input argument alone.
Status:
RESOLVED
Priority:
Critical
Resolution:
Won't Fix
Affects_version:
0.20.0
Fix_version:
None
Component:
Client
Label:
None
Environment:

Attachment number:
0
Assignee:
Jim Kellerman
Reporter:
Jim Kellerman
Create date:
18/Aug/09 02:38
Update date:
08/Apr/13 20:51
Resolved date:
08/Apr/13 20:51
