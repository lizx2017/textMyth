Summary:
Scan javadoc doesn't fully capture semantics of start and stop row
Description:
The current javadoc for Scan#setStartRow and Scan#setStopRow methods don't accurately capture the semantics of the use of row prefix values. Both methods describe the use of a trailing null byte to change the inclusive/exclusive the respective semantics of setStartRow and setStopRow.
The use of a trailing null byte for start row exclusion only works in the case that exact full matching is done on row keys. The use of a trailing null byte for stop row inclusion has even more limitations (see HBASE-9035).
The basic example is having the following rows:
AAB
ABB
BBC
BCC
Setting the start row to A and the stop row to B will include AAB and AB.
Setting the start row to A\x0 and the stop row to B\x0 will result in the same two rows coming out of the scan, instead of having an effect on the inclusion/exclusion semantics.
Status:
RESOLVED
Priority:
Minor
Resolution:
Fixed
Affects_version:
None
Fix_version:
2.0.0
Component:
documentation
Label:
None
Environment:

Attachment number:
0
Assignee:
Gabriel Reid
Reporter:
Gabriel Reid
Create date:
15/Oct/13 08:05
Update date:
12/Dec/14 05:21
Resolved date:
12/Dec/14 03:39
