Summary:
Use of Random.nextLong() in HRegionServer.addScanner(...)
Description:
ScannerIds are currently assigned by getting a random long. While it would be a rare occurrence that two scanners received the same ids on the same region server the results would seem to be... Bad.
A client scanner would get results from a different server scanner, and maybe only from some of the region servers.
A safer approach would be using an AtomicLong. We do not have to worry about running of numbers: If we got 10000 scanners per second it'd take > 2.9m years to reach 2^63.
Then again the same reasoning would imply that this collisions would be happening too rarely to be of concern (assuming a good random number generator). So maybe this is a none-issue.
AtomicLong would also imply a minor performance hit on multi core machines, as it would force a memory barrier.
Status:
RESOLVED
Priority:
Minor
Resolution:
Won't Fix
Affects_version:
0.90.3
Fix_version:
None
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Lars Hofhansl
Reporter:
Lars Hofhansl
Create date:
08/Aug/11 23:54
Update date:
09/Aug/11 23:39
Resolved date:
09/Aug/11 23:39
