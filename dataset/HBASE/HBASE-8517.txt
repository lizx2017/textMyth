Summary:
Stochastic Loadbalancer isn't finding steady state on real clusters
Description:
I have a cluster that runs IT tests. Last night after all tests were done I noticed that the balancer was thrashing regions around.
The number of regions on each machine is not correct.
The balancer seems to value the cost of moving a region way too little.
2013-05-09 16:34:58,920 DEBUG [IPC Server handler 4 on 60000] org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer: Finished computing new load balance plan.  Computation took 5367ms to try 8910 different iterations.  Found a solution that moves 37 regions; Going from a computed cost of 56.50254222730425 to a new cost of 11.214035466575254
2013-05-09 16:37:48,715 DEBUG [IPC Server handler 7 on 60000] org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer: Finished computing new load balance plan.  Computation took 4735ms to try 8910 different iterations.  Found a solution that moves 38 regions; Going from a computed cost of 56.612624531830996 to a new cost of 11.275763861636982
2013-05-09 16:38:11,398 DEBUG [IPC Server handler 6 on 60000] org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer: Finished computing new load balance plan.  Computation took 4502ms to try 8910 different iterations.  Found a solution that moves 39 regions; Going from a computed cost of 56.50048461413552 to a new cost of 11.225352339003237
Each of those balancer runs were triggered when there was no load on the cluster.
Status:
CLOSED
Priority:
Blocker
Resolution:
Fixed
Affects_version:
0.95.0, 0.95.1
Fix_version:
0.95.1
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Elliott Clark
Reporter:
Elliott Clark
Create date:
09/May/13 20:39
Update date:
23/Sep/13 19:08
Resolved date:
25/May/13 00:23
