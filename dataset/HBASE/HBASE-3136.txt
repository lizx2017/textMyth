Summary:
Stale reads from ZK can break the atomic CAS operations we have in ZKAssign
Description:
With ZK based region transitions, we rely on atomic state changes of regions in transition. For example, an RS needs to atomically switch a node from OFFLINE to OPENING, or the master needs to delete nodes that are in OPENED state, etc...
The way we implement this is by:
Read existing data (returns byte[] and version in Stat)
Verify data is in expected state
Update to the new state, passing the expected version previously read
This doesn't always work as expected because that initial read of the existing data could be a stale read (in ZK, writes are quorum writes but reads are not so you can get stale data).
Can provide a more explicit example if anyone is interested, but a fix is coming.
Status:
CLOSED
Priority:
Blocker
Resolution:
Fixed
Affects_version:
0.89.20100621, (2)
Fix_version:
0.90.0
Component:
Zookeeper
Label:
None
Environment:

Attachment number:
0
Assignee:
Jonathan Gray
Reporter:
Jonathan Gray
Create date:
20/Oct/10 23:19
Update date:
12/Oct/12 06:17
Resolved date:
24/Oct/10 22:33
