Summary:
Export Utility throws ClassNotFoundException
Description:
The command I ran is as below:
"bin/hbase org.apache.hadoop.hbase.mapreduce.Driver export t1 ./t1"
And I got the following exceptions:
attempt_201207261322_0002_m_000000_0, Status : FAILED
Error: java.lang.ClassNotFoundException: org.apache.hadoop.hbase.util.Bytes
at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
at org.apache.hadoop.hbase.client.HTable.<init>(HTable.java:150)
at org.apache.hadoop.hbase.mapreduce.TableInputFormat.setConf(TableInputFormat.java:100)
at org.apache.hadoop.util.ReflectionUtils.setConf(ReflectionUtils.java:62)
at org.apache.hadoop.util.ReflectionUtils.newInstance(ReflectionUtils.java:117)
at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:767)
at org.apache.hadoop.mapred.MapTask.run(MapTask.java:371)
at org.apache.hadoop.mapred.Child$4.run(Child.java:266)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.au
...
This exception can be resolved by adding hbase common jar into HADOOP_CLASSPATH. But this is an extra step for users and not so convenient.
We could add Bytes.class into dependency Jars of the MapReduce job.
Status:
RESOLVED
Priority:
Minor
Resolution:
Cannot Reproduce
Affects_version:
0.95.2
Fix_version:
None
Component:
mapreduce, util
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Shane Huang
Create date:
26/Jul/12 05:40
Update date:
11/Apr/15 00:21
Resolved date:
11/Apr/15 00:21
