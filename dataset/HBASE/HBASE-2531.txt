Summary:
32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes
Description:
Kannan tripped over two regionnames that hashed the same:
Here is code demo'ing that his two names hash the same:
package org;

import org.apache.hadoop.hbase.util.Bytes;
import org.apache.hadoop.hbase.util.JenkinsHash;


public class Testing {
  public static void main(final String [] args) {
    System.out.println(encodeRegionName(Bytes.toBytes("test1,6838000000,1273541236167")));
    System.out.println(encodeRegionName(Bytes.toBytes("test1,0520100000,1273541610201")));
  }

  /**
   * @param regionName
   * @return the encodedName
   */
  public static int encodeRegionName(final byte [] regionName) {
    return Math.abs(JenkinsHash.getInstance().hash(regionName, regionName.length, 0));
  }
}
Need new encoding mechanism. Will need to migrate old regions to new schema.
Status:
CLOSED
Priority:
Blocker
Resolution:
Fixed
Affects_version:
None
Fix_version:
0.90.0
Component:
None
Label:
moved_from_0_20_5
Environment:

Attachment number:
0
Assignee:
Kannan Muthukkaruppa
Reporter:
stack
Create date:
11/May/10 05:30
Update date:
20/Nov/15 12:42
Resolved date:
01/Jun/10 03:52
