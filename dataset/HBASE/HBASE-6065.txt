Summary:
Log for flush would append a non-sequential edit in the hlog, leading to possible data loss
Description:
After completing flush region, we will append a log edit in the hlog file through HLog#completeCacheFlush.
public void completeCacheFlush(final byte [] encodedRegionName,
      final byte [] tableName, final long logSeqId, final boolean isMetaRegion)
{
...
HLogKey key = makeKey(encodedRegionName, tableName, logSeqId,
            System.currentTimeMillis(), HConstants.DEFAULT_CLUSTER_ID);
...
}
when we make the hlog key, we use the seqId from the parameter, and it is generated by HLog#startCacheFlush,
Here, we may append a lower seq id edit than the last edit in the hlog file.
If it is the last edit log in the file, it may cause data loss.
because
HRegion#replayRecoveredEditsIfAny{
...
maxSeqId = Math.abs(Long.parseLong(fileName));
      if (maxSeqId <= minSeqId) {
        String msg = "Maximum sequenceid for this log is " + maxSeqId
            + " and minimum sequenceid for the region is " + minSeqId
            + ", skipped the whole file, path=" + edits;
        LOG.debug(msg);
        continue;
      }
...
}
We may skip the splitted log file, because we use the lase edit's seq id as its file name, and consider this seqId as the max seq id in this log file.
Status:
CLOSED
Priority:
Critical
Resolution:
Fixed
Affects_version:
None
Fix_version:
0.94.1, 0.95.0
Component:
wal
Label:
None
Environment:

Attachment number:
0
Assignee:
chunhui shen
Reporter:
chunhui shen
Create date:
22/May/12 03:29
Update date:
26/Feb/13 08:16
Resolved date:
28/May/12 04:35
