Summary:
Improve thread safety of HTablePool
Description:
There are some operations in HTablePool accessing PoolMap in multiple places without any explicit synchronization.
For example HTablePool.closeTablePool() calls PoolMap.values(), and calls PoolMap.remove(). If other threads add new instances to the pool in the middle of the calls, the newly added instances might be dropped. (HTablePool.closeTablePool() also has another problem that calling it by multiple threads causes accessing HTable by multiple threads.)
Moreover, PoolMap is not thread safe for the same reason.
For example PoolMap.put() calles ConcurrentMap.get() and calles ConcurrentMap.put(). If other threads add a new instance to the concurent map in the middle of the calls, the new instance might be dropped.
And also implementations of Pool have the same problems.
Status:
RESOLVED
Priority:
Major
Resolution:
Won't Fix
Affects_version:
0.94.1
Fix_version:
None
Component:
Client
Label:
None
Environment:

Attachment number:
0
Assignee:
Hiroshi Ikeda
Reporter:
Hiroshi Ikeda
Create date:
24/Aug/12 03:14
Update date:
12/Apr/17 03:57
Resolved date:
12/Apr/17 03:57
