Summary:
Calling HTable.getTableDescriptor().* on a full cluster takes a long time
Description:
On a cluster with many tables, and consequently many regions, calling the getTableDescriptor() methods on a HTable takes a very long time, depending on the number of regions. For comparison, on a cluster with 7000 regions, getting a table descriptor ranged between 4 and 36 seconds, even when the queried table was empty.
The problem seems to lie in the HConnectionManager.getHTableDescriptor() method, which calls MetaScanner.scan() with an empty START_ROW. This means that even if we need the descriptor for a single region table, we still need to wait until the entire META is scanned. There is also a constructor for MetaScanner.scan() which takes the table name to lookup as a param.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
0.90.0
Fix_version:
0.90.0
Component:
None
Label:
None
Environment:
centos
Attachment number:
0
Assignee:
Unassigned
Reporter:
Cristian Ivascu
Create date:
04/Feb/10 22:04
Update date:
20/Nov/15 13:01
Resolved date:
05/Feb/10 06:52
