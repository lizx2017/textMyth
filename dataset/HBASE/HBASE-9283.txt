Summary:
Struct and StructIterator should properly handle trailing nulls
Description:
For a composite row key, Phoenix strips off trailing null columns values in the row key. The reason this is important is that then new nullable row key columns can be added to a schema without requiring any data upgrade to existing rows. Otherwise, adding new row key columns to the end of a schema becomes extremely cumbersome, as you'd need to delete all existing rows and add them back with a row key that includes a null value.
Rather than Phoenix needing to modify the iteration code everywhere (as Nick Dimiduk outlined here: https://issues.apache.org/jira/browse/HBASE-8693?focusedCommentId=13744499&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13744499), it'd be better if StructIterator handled this out-of-the-box. Otherwise, if Phoenix has to specialize this, we'd lose the interop piece which is the justification for switching our type system to this new one in the first place.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
0.95.2
Fix_version:
0.98.0, 0.96.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Nick Dimiduk
Reporter:
Nick Dimiduk
Create date:
20/Aug/13 23:43
Update date:
20/Nov/15 11:53
Resolved date:
28/Aug/13 18:32
