Summary:
Caching problem with JSP:Search tag
Description:
Hi all,
I have been working on a few issues with the ability to crash the JSP:Search
tag when no criteria have been submitted. With out imposing validation
restrictions on the tag itself I put in some more robust exception handling
and put into place some fail safe logic that will abort the tag if there is
a problem. I added a new attribute called throwOnException="true|false" so
that if you want to do debugging you can turn it on. Each line of lucene
code that throws exceptions looks like this.
try{
//volatile code here
}catch(SomeException e)
if(throwOnException)
{ throw new JspException("class name: " + e); }
abort = true;
}
if any of the code fails the tag expose the current variable state into the
PAGE_SCOPE and exit. I am having a problem with caching. I am not sure if it
is a problem with Tom Cat or the search engine. I hope you can give me some
advice.
When I run the tag and pass it good criteria the tag responds with the
results as expected. When I hit the back button and submit an empty form
field the tag stops processing as expected but still shows the hitCount from
the previous query, ever there after I can not get the tag to produce
results from an criteria, the values from the previous run are cached. Is
this a Tom Cat setting or am I doing something wrong in the way I am
processing the tag?
I am posting the entire tag at the bottom of this email but if there is a
better way to provide the example please let me know. I will also submit it
as a bug report.
Bryan LaPlante
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
1.2
Fix_version:
None
Component:
core/search
Label:
None
Environment:

Attachment number:
0
Assignee:
Lucene Developers
Reporter:
Bryan LaPlante
Create date:
21/May/03 02:18
Update date:
27/May/06 01:36
Resolved date:
27/May/06 01:36
