Summary:
disk full can cause index corruption in certain cases
Description:
Robert uncovered this nasty bug, in adding more randomness to
oal.index tests...
I got a standalone test to show the issue; the corruption path is
as follows:
The merge hits an initial exception (eg disk full when merging the
postings).
In handling this exception, IW closes all the sub-readers,
suppressing any further exceptions.
If one of these sub-readers has pending deletions, which happens
if readers are pooled in IW, it will flush them. If that flush
hits a 2nd exception (eg disk full), then SegmentReader
[incorrectly] leaves the SegmentInfo's delGen advanced by 1,
referencing a corrupt file, yet the SegmentReader is still
forcefully closed.
If enough disk frees up such that a later IW.commit/close
succeeds, the resulting segments file will reference an invalid
deletions file.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
None
Fix_version:
2.9.4, (3)
Component:
core/index
Label:
None
Environment:

Attachment number:
0
Assignee:
Michael McCandless
Reporter:
Michael McCandless
Create date:
10/Aug/10 14:25
Update date:
01/Dec/10 14:49
Resolved date:
10/Aug/10 22:34
