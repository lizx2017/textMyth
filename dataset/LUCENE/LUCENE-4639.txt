Summary:
Improving _TestUtil.getTempDir
Description:
Spinoff from here: http://lucene.472066.n3.nabble.com/TestUtil-getTempFile-may-fail-on-quot-Access-Denied-quot-td4028048.html.
_TestUtil.getTempDir uses createTempFile and then deletes the file. While this usually works, if someone runs tests by multiple JVMs and does not ensure each JVM gets an isolated temp.dir to work in, that my result in two JVMs sharing the same directory.
Also, on Windows, if you call getTempDir on an existing directory, you get an "Access is denied" exception.
Dawid proposed a simple solution to just call mkdirs() continuously until success. I'd like to try that.
Also, I think that genTempFile could use some house cleaning, e.g.:
tempFileLocker can be just an Object instance? Why do we need a class?
If we initialize counter and counterBase in a static clause, we can avoid checking if counter==0 as well as passing Random to genTempFile (that will remove any suspicion that it does anything randomly)
Also, instead of synchronizing on tempFileLocker, can we just use AtomicInteger for the counter?
I'll modify getTempDir first. It documents "does not create the directory", I want to make sure no test fails due that.
Status:
CLOSED
Priority:
Minor
Resolution:
Fixed
Affects_version:
None
Fix_version:
4.1, 6.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Shai Erera
Reporter:
Shai Erera
Create date:
20/Dec/12 06:56
Update date:
09/May/16 18:31
Resolved date:
23/Dec/12 08:45
