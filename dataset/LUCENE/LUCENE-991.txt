Summary:
BoostingTermQuery.explain() bugs
Description:
There are a couple of minor bugs in BoostingTermQuery.explain().
1. The computation of average payload score produces NaN if no payloads were found. It should probably be:
float avgPayloadScore = super.score() * (payloadsSeen > 0 ? (payloadScore / payloadsSeen) : 1);
2. If the average payload score is zero, the value of the explanation is 0:
result.setValue(nonPayloadExpl.getValue() * avgPayloadScore);
If the query is part of a BooleanClause, this results in:
"no match on required clause..."
"failure to meet condition(s) of required/prohibited clause(s)"
The average payload score can be zero if the field boost = 0.
I've attached a patch to 'TestBoostingTermQuery.java', however, the test 'testNoPayload' fails in 'SpanScorer.score()' because the doc = -1. It looks like 'setFreqCurrentDoc() should have been called before 'score()'. Maybe someone more knowledgable of spans could investigate this.
Status:
RESOLVED
Priority:
Minor
Resolution:
Fixed
Affects_version:
2.2
Fix_version:
None
Component:
core/search
Label:
None
Environment:

Attachment number:
0
Assignee:
Grant Ingersoll
Reporter:
Peter Keegan
Create date:
31/Aug/07 14:35
Update date:
03/Nov/07 05:41
Resolved date:
08/Sep/07 16:57
