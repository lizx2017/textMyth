Summary:
NPE when using searcher, 1.3RC1
Description:
Using an IndexSearcher as below results in an NPE at line 90 of Hits.java called from
line 80 of Hits.java called from line 71 of Searcher.java. Downgrading to v1.2 fixes the
bug.
The error occurred on Win2000 running JRE 1.3.0-C + Tomcat 4.1.18, but does not occur
in JRE 1.4.1_02-b06 + Tomcat 4.1.24.
public Collection search(String query, String[] fields, int[] flags, Filter filter, Class
targetClass) throws Exception
{
if (fields == null)
{ fields = new String[1]; fields[0] = getDefaultSearchField(); }
Log log = LogFactory.getLog(SearchEngine.class);
log.debug("Query is '" + query + "'; target Class=" + targetClass.getName());
Query luceneQuery = QueryParser.parse(query, "", new StandardAnalyzer());
Searcher searcher = null;
try {
searcher = new IndexSearcher(getIndexPath());
Hits hits = (filter == null? searcher.search(luceneQuery) :
searcher.search(luceneQuery, filter));
log.debug("Query hits: " + hits.length());
ArrayList results = new ArrayList();
HashMap props = new HashMap();
for (int i = 0; i < hits.length(); i++) {
Object bean = createObject(hits.doc, targetClass);
if (bean != null)
{ results.add(bean); }
}
return (results.isEmpty()? null : results);
}
finally {
if (searcher != null)
{ searcher.close(); }
}
}
Status:
CLOSED
Priority:
Major
Resolution:
Cannot Reproduce
Affects_version:
None
Fix_version:
None
Component:
core/search
Label:
None
Environment:

Attachment number:
0
Assignee:
Lucene Developers
Reporter:
Doug Kirk
Create date:
24/May/03 01:32
Update date:
02/Jun/11 22:04
Resolved date:
27/May/06 01:36
