Summary:
exceptions during IW.rollback can leak files and locks
Description:
Today, rollback() doesn't always succeed: if it does, it closes the writer nicely. otherwise, if it hits exception, it leaves you with a half-broken writer, still potentially holding file handles and write lock.
This is especially bad if you use Native locks, because you are kind of hosed, the static map prevents you from forcefully unlocking (e.g. IndexWriter.unlock) so you have no real course of action to try to recover.
If rollback() hits exception, it should still deliver the exception, but release things (e.g. like IOUtils.close).
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
None
Fix_version:
4.7.1, 4.8, 6.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Robert Muir
Create date:
21/Mar/14 04:03
Update date:
09/May/16 18:32
Resolved date:
21/Mar/14 17:06
