Summary:
ArrayIndexOutOfBoundsException in IntRange.toString and its siblings
Description:
The following code produces an ArrayIndexOutOfBoundsException:
        IntRange intRange = new IntRange("foo", new int[] { 1 }, new int[] { 2 });
        System.out.println(intRange.toString());
The exception is thrown in NumericUtils.sortableBytesToInt, which is fed an incorrect offset.
The bug appears to be in IntRange.toString. I guess the for loop should read
for (int d=0; d<type.pointDimensionCount()/2; ++d)
instead of
for (int d=1; d<type.pointDimensionCount(); ++d)
because the number of dimensions is half the number of "point dimensions" (cf. the checks on the dimension parameter in getMin() and getMax()).
The same bug is found in the DoubleRange, FloatRange, and LongRange classes.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
7.2
Fix_version:
7.3, 8.0
Component:
core/index
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Oliver Kaleske
Create date:
14/Feb/18 14:55
Update date:
04/Apr/18 21:51
Resolved date:
15/Feb/18 14:24
