Summary:
buildAndPushRelease.py should ensure you have no unpushed git changes
Description:
I'm just a git newbie so I'm not sure how to add this to our release scripts, but I think it's quite important that we don't up and release something the world containing changes I had only committed locally and then failed to push. What if I then remove that directory after we've released?
We should also fix the release smoke tester to confirm the git revision is known ... I'll open a separate issue for that.
I'm trying to be super careful not to do this for 5.5.0, but really the release script should catch this.
I did a bit of googling and found the magic command git cherry -v origin/branch_5_5 seemed to work (at least, it showed my one local commit), but e.g. "origin" is just a label I use (others use "upstream"), etc., so I'm not sure how to reliably do this... maybe we have to run git remote -v and figure out what label use use for the "official" (wip) Apache git instance?
Status:
OPEN
Priority:
Major
Resolution:
Unresolved
Affects_version:
None
Fix_version:
None
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Michael McCandless
Create date:
11/Feb/16 16:36
Update date:
11/Feb/16 17:31
Resolved date:

