Summary:
In NRT mode, and CFS enabled, IndexWriter incorrectly ties up disk space
Description:
Spinoff of java-user thread titled "searching while optimize"...
If IndexWriter is in NRT mode (you've called getReader() at least
once), and CFS is enabled, then internally the writer pools readers.
However, after a merge completes, it opens the reader against het
non-CFS segment files, and pools that. It then builds the CFS file,
as well, thus tying up the storage for that segment twice.
Functionally the bug is harmless (it's only a disk space issue).
Also, when the segment is merged, the disk space is released again
(though the newly merged segment will also be double-tied-up).
Simple workaround is to use non-CFS mode, or, don't use getReader.
Status:
CLOSED
Priority:
Minor
Resolution:
Fixed
Affects_version:
2.9, 2.9.1, 3.0
Fix_version:
3.1, 4.0-ALPHA
Component:
core/index
Label:
None
Environment:

Attachment number:
0
Assignee:
Michael McCandless
Reporter:
Michael McCandless
Create date:
29/Nov/09 11:06
Update date:
30/Mar/11 15:50
Resolved date:
10/Mar/11 18:25
