Summary:
If IndexWriter is interrupted on close and is using a channel (mmap/nio), it can throw a ClosedByInterruptException and prevent you from opening a new IndexWriter in the same proceses if you are using Native locks.
Description:
The ClosedByInterruptException will prevent the index from being unlocked in close. If you try and close again, the call will hang. If you are using native locks and try to open a new IndexWriter, it will fail to get the lock. If you try IW#forceUnlock, it wont work because the not fully closed IW will still have the lock.
ideas:
On ClosedByInterruptException, IW should continue trying to close what it can and unlock the index? Generally I have see the exception trigger in commitInternal.
We should add a non static forceUnlock to IW that lets you remove the lock and start a new IW?
We should make the lock protected so IW sub classes could unlock the index in advanced use cases?
others?
Status:
OPEN
Priority:
Major
Resolution:
Unresolved
Affects_version:
None
Fix_version:
4.9, 6.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Unassigned
Reporter:
Mark Miller
Create date:
19/Dec/12 16:13
Update date:
09/May/16 18:32
Resolved date:

