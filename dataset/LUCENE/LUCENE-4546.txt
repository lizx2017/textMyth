Summary:
SorterTemplate.quicksort incorrect
Description:
On trying to use the very useful o.a.l.utils.SorterTemplate, I stumbled upon inconsistent sorting behaviour, of course, only a randomized test caught this
Because SorterTemplate.quicksort is used in several places in the code (directly BytesRefList, ArrayUtil, BytesRefHash, CollectionUtil and transitively index and search), I'm a bit puzzled that this either hasn't been caught by another higher-level test or that neither my test nor my understanding of an insufficiency in the code is valid
If the former holds and given that the same code is released in 3.6 and 4.0, this might even be a more critical issue requiring a higher priority than 'major'.
So, can a second pair of eyes please have a timely look at the attached test and patch?
Basically the current quicksort implementation seems to assume that luckily always the median is chosen as pivot element by grabbing the mid element, not handling the case where the initially chosen pivot ends up not in the middle. Hope this and the test helps to understand the issue.
Reproducible, currently failing test and a patch attached.
Status:
CLOSED
Priority:
Major
Resolution:
Not A Problem
Affects_version:
3.6.1, 4.0, 4.1
Fix_version:
3.6.1, 4.0, 4.1
Component:
core/other
Label:
patch
Environment:

Attachment number:
0
Assignee:
Uwe Schindler
Reporter:
Stefan Pohl
Create date:
07/Nov/12 14:29
Update date:
24/Jan/13 06:33
Resolved date:
07/Nov/12 16:17
