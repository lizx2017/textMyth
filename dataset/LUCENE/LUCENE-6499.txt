Summary:
WindowsFS misses to remove open file handle if file is concurrently deleted
Description:
WindowsFs has some race conditions when files are concurrently opened and deleted. A file might be successfully opened while concurrently deleted which should be prevented by the WindowsFS with an IOException / access denied. The problem is that we try to remove the leaked file handle form the internal map on close which fails since we fail to read the key from the filesystem since it has already been deleted. This manifests in subsequent `access denied` exceptions even though all streams on the file are closed.
Status:
CLOSED
Priority:
Major
Resolution:
Fixed
Affects_version:
5.1
Fix_version:
5.2, 6.0
Component:
modules/test-framework
Label:
None
Environment:

Attachment number:
0
Assignee:
Simon Willnauer
Reporter:
Simon Willnauer
Create date:
25/May/15 19:49
Update date:
09/May/16 18:40
Resolved date:
26/May/15 20:44
