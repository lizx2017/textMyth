Summary:
Cassandra 2.0.9 crashes with ERROR [CompactionExecutor:216] 2014-07-10 14:26:08,334 CassandraDaemon.java (line 199) Exception in thread Thread[CompactionExecutor:216,1,main]
Description:
System crashed with
ERROR [CompactionExecutor:216] 2014-07-10 14:26:08,320 CassandraDaemon.java (line 199) Exception in thread Thread[CompactionExecutor:216,1,main]
ERROR [CompactionExecutor:216] 2014-07-10 14:26:08,325 CassandraDaemon.java (line 199) Exception in thread Thread[CompactionExecutor:216,1,main]
ERROR [CompactionExecutor:216] 2014-07-10 14:26:08,334 CassandraDaemon.java (line 199) Exception in thread Thread[CompactionExecutor:216,1,main]
Unable to repeat yet, works after restart.
Installation is local, not clustered. Data table schema below. Enabled internal user/password authentication.
----------------------------------
CREATE TABLE sflowdata (
pk timeuuid,
when bigint,
samplesequenceno bigint,
bgp_localpref int,
bgp_nexthop text,
countryfrom text,
countryto text,
dst_as int,
dst_as_path text,
dst_peer_as int,
dstip text,
dstmac text,
dstsubnetmask int,
headerbytes text,
headerlen int,
headerprotocol int,
in_priority int,
in_vlan int,
inputport int,
ipprotocol int,
ipsize int,
iptos int,
ipttl int,
meanskipcount int,
my_as int,
nexthop text,
out_priority int,
out_vlan int,
outputport int,
sampledpacketsize int,
src_as int,
src_peer_as int,
srcip text,
srcmac text,
srcsubnetmask int,
strippedbytes int,
tcpdstport int,
tcpflags int,
tcpsrcport int,
PRIMARY KEY ((pk), when, samplesequenceno)
) WITH
bloom_filter_fp_chance=0.010000 AND
caching='KEYS_ONLY' AND
comment='' AND
dclocal_read_repair_chance=0.100000 AND
gc_grace_seconds=864000 AND
index_interval=128 AND
read_repair_chance=0.000000 AND
replicate_on_write='true' AND
populate_io_cache_on_flush='false' AND
default_time_to_live=0 AND
speculative_retry='99.0PERCENTILE' AND
memtable_flush_period_in_ms=0 AND
compaction=
{'class': 'SizeTieredCompactionStrategy'}
AND
compression=
{'sstable_compression': 'LZ4Compressor'}
;
CREATE INDEX bgp_localpref_idx ON sflowdata (bgp_localpref);
CREATE INDEX bgp_nexthop_idx ON sflowdata (bgp_nexthop);
CREATE INDEX countryfrom_idx ON sflowdata (countryfrom);
CREATE INDEX countryto_idx ON sflowdata (countryto);
CREATE INDEX dstas_idx ON sflowdata (dst_as);
CREATE INDEX dst_as_path_idx ON sflowdata (dst_as_path);
CREATE INDEX dstpeer_idx ON sflowdata (dst_peer_as);
CREATE INDEX dstip_idx ON sflowdata (dstip);
CREATE INDEX dstmac_idx ON sflowdata (dstmac);
CREATE INDEX dstsubnetmask_idx ON sflowdata (dstsubnetmask);
CREATE INDEX headerbytes_idx ON sflowdata (headerbytes);
CREATE INDEX headerlen_idx ON sflowdata (headerlen);
CREATE INDEX headerprotocol_idx ON sflowdata (headerprotocol);
CREATE INDEX in_priority_idx ON sflowdata (in_priority);
CREATE INDEX in_vlan_idx ON sflowdata (in_vlan);
CREATE INDEX inputport_idx ON sflowdata (inputport);
CREATE INDEX ipprotocol_idx ON sflowdata (ipprotocol);
CREATE INDEX ipsize_idx ON sflowdata (ipsize);
CREATE INDEX iptos_idx ON sflowdata (iptos);
CREATE INDEX ipttl_idx ON sflowdata (ipttl);
CREATE INDEX meanskipcount_idx ON sflowdata (meanskipcount);
CREATE INDEX my_as_idx ON sflowdata (my_as);
CREATE INDEX nexthop_idx ON sflowdata (nexthop);
CREATE INDEX out_priority_idx ON sflowdata (out_priority);
CREATE INDEX out_vlan_idx ON sflowdata (out_vlan);
CREATE INDEX outputport_idx ON sflowdata (outputport);
CREATE INDEX sampledpacketsize_idx ON sflowdata (sampledpacketsize);
CREATE INDEX src_as_idx ON sflowdata (src_as);
CREATE INDEX src_peer_as_idx ON sflowdata (src_peer_as);
CREATE INDEX srcip_idx ON sflowdata (srcip);
CREATE INDEX srcmac_idx ON sflowdata (srcmac);
CREATE INDEX srcsubnetmask_idx ON sflowdata (srcsubnetmask);
CREATE INDEX strippedbytes_idx ON sflowdata (strippedbytes);
CREATE INDEX tcpdstport_idx ON sflowdata (tcpdstport);
CREATE INDEX tcpflags_idx ON sflowdata (tcpflags);
CREATE INDEX tcpsrcport_idx ON sflowdata (tcpsrcport);
CREATE TABLE sflowdata (
pk timeuuid,
when bigint,
samplesequenceno bigint,
bgp_localpref int,
bgp_nexthop text,
countryfrom text,
countryto text,
dst_as int,
dst_as_path text,
dst_peer_as int,
dstip text,
dstmac text,
dstsubnetmask int,
headerbytes text,
headerlen int,
headerprotocol int,
in_priority int,
in_vlan int,
inputport int,
ipprotocol int,
ipsize int,
iptos int,
ipttl int,
meanskipcount int,
my_as int,
nexthop text,
out_priority int,
out_vlan int,
outputport int,
sampledpacketsize int,
src_as int,
src_peer_as int,
srcip text,
srcmac text,
srcsubnetmask int,
strippedbytes int,
tcpdstport int,
tcpflags int,
tcpsrcport int,
PRIMARY KEY ((pk), when, samplesequenceno)
) WITH
bloom_filter_fp_chance=0.010000 AND
caching='KEYS_ONLY' AND
comment='' AND
dclocal_read_repair_chance=0.100000 AND
gc_grace_seconds=864000 AND
index_interval=128 AND
read_repair_chance=0.000000 AND
replicate_on_write='true' AND
populate_io_cache_on_flush='false' AND
default_time_to_live=0 AND
speculative_retry='99.0PERCENTILE' AND
memtable_flush_period_in_ms=0 AND
compaction=
{'class': 'SizeTieredCompactionStrategy'}
AND
compression=
{'sstable_compression': 'LZ4Compressor'}
;
CREATE INDEX bgp_localpref_idx ON sflowdata (bgp_localpref);
CREATE INDEX bgp_nexthop_idx ON sflowdata (bgp_nexthop);
CREATE INDEX countryfrom_idx ON sflowdata (countryfrom);
CREATE INDEX countryto_idx ON sflowdata (countryto);
CREATE INDEX dstas_idx ON sflowdata (dst_as);
CREATE INDEX dst_as_path_idx ON sflowdata (dst_as_path);
CREATE INDEX dstpeer_idx ON sflowdata (dst_peer_as);
CREATE INDEX dstip_idx ON sflowdata (dstip);
CREATE INDEX dstmac_idx ON sflowdata (dstmac);
CREATE INDEX dstsubnetmask_idx ON sflowdata (dstsubnetmask);
CREATE INDEX headerbytes_idx ON sflowdata (headerbytes);
CREATE INDEX headerlen_idx ON sflowdata (headerlen);
CREATE INDEX headerprotocol_idx ON sflowdata (headerprotocol);
CREATE INDEX in_priority_idx ON sflowdata (in_priority);
CREATE INDEX in_vlan_idx ON sflowdata (in_vlan);
CREATE INDEX inputport_idx ON sflowdata (inputport);
CREATE INDEX ipprotocol_idx ON sflowdata (ipprotocol);
CREATE INDEX ipsize_idx ON sflowdata (ipsize);
CREATE INDEX iptos_idx ON sflowdata (iptos);
CREATE INDEX ipttl_idx ON sflowdata (ipttl);
CREATE INDEX meanskipcount_idx ON sflowdata (meanskipcount);
CREATE INDEX my_as_idx ON sflowdata (my_as);
CREATE INDEX nexthop_idx ON sflowdata (nexthop);
CREATE INDEX out_priority_idx ON sflowdata (out_priority);
CREATE INDEX out_vlan_idx ON sflowdata (out_vlan);
CREATE INDEX outputport_idx ON sflowdata (outputport);
CREATE INDEX sampledpacketsize_idx ON sflowdata (sampledpacketsize);
CREATE INDEX src_as_idx ON sflowdata (src_as);
CREATE INDEX src_peer_as_idx ON sflowdata (src_peer_as);
CREATE INDEX srcip_idx ON sflowdata (srcip);
CREATE INDEX srcmac_idx ON sflowdata (srcmac);
CREATE INDEX srcsubnetmask_idx ON sflowdata (srcsubnetmask);
CREATE INDEX strippedbytes_idx ON sflowdata (strippedbytes);
CREATE INDEX tcpdstport_idx ON sflowdata (tcpdstport);
CREATE INDEX tcpflags_idx ON sflowdata (tcpflags);
CREATE INDEX tcpsrcport_idx ON sflowdata (tcpsrcport);
Status:
RESOLVED
Priority:
Normal
Resolution:
Cannot Reproduce
Affects_version:

Fix_version:
None
Component:
None
Label:
None
Environment:
ubuntu
Attachment number:
0
Assignee:
Marcus Eriksson
Reporter:
Ivan Kudryavtsev
Create date:
10/Jul/14 08:15
Update date:
16/Apr/19 09:31
Resolved date:
18/Aug/14 12:06
