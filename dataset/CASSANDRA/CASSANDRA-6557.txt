Summary:
CommitLogSegment may be duplicated in unlikely race scenario
Description:
In the unlikely event that the thread that switched to a new CLS has not finished executing the cleanup of its switch by the time the CLS has finished being used, it is possible for the same segment to be 'switched' in again. This would be benign except that it is added to the activeSegments queue a second time also, which would permit it to be recycled twice, creating two different CLS objects in memory pointing to the same CLS on disk, after which all bets are off.
The issue is highly unlikely to occur, but highly unlikely means it will probably happen eventually. I've fixed this based on my patch for CASSANDRA-5549, using the NonBlockingQueue I introduce there to simplify the logic and make it more obviously correct.
Status:
RESOLVED
Priority:
Low
Resolution:
Fixed
Affects_version:

Fix_version:
2.1 beta2
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Benedict
Reporter:
Benedict
Create date:
07/Jan/14 16:32
Update date:
16/Apr/19 09:31
Resolved date:
14/Mar/14 17:40
