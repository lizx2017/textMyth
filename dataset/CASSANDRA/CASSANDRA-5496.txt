Summary:
Fix SemanticVersion.isSupportedBy patch/minor handling
Description:
Currently we use the following logic:
return major == version.major && minor <= version.minor && patch <= version.patch;
This requires both minor and patch vers to be less or equal, which means that, for example, '3.0.3' is not supported by '3.1.2', because, while 0 <= 1 (minor), 3 > 2 (patch). This is clearly not the intent since 3.1.2 > 3.0.3.
CQL3 doc: "Minor version increments occur when new, but backward compatible, functionality is introduced". Hence '3.0.3' is supposed to be supported by '3.1.0'.
This doesn't really affect 1.2, but breaks a lot of trunk dtests post CASSANDRA-3919.
Status:
RESOLVED
Priority:
Low
Resolution:
Fixed
Affects_version:

Fix_version:
1.2.5
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Aleksey Yeschenko
Reporter:
Aleksey Yeschenko
Create date:
18/Apr/13 16:32
Update date:
16/Apr/19 09:32
Resolved date:
18/Apr/13 16:48
