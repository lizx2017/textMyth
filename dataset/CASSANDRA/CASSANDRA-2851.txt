Summary:
hex-to-bytes conversion accepts invalid inputs silently
Description:
FBUtilities.hexToBytes() has a minor bug - it copes with single-character inputs by prepending "0", which is OK - but it does this for any input with an odd number of characters, which is probably incorrect.
if (str.length() % 2 == 1)
    str = "0" + str;
Given 'fff' as an input, can we really assume that this should be '0fff'? Isn't this just an error?
Add the following to FBUtilitiesTest to demonstrate:
String[] badvalues = new String[]{"000", "fff"};
       
for (int i = 0; i < badvalues.length; i++)
    try
    {
        FBUtilities.hexToBytes(badvalues[i]);
        fail("Invalid hex value accepted"+badvalues[i]);
    } catch (Exception e){}
Status:
RESOLVED
Priority:
Low
Resolution:
Fixed
Affects_version:

Fix_version:
1.1.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Sylvain Lebresne
Reporter:
David Allsopp
Create date:
03/Jul/11 18:04
Update date:
16/Apr/19 09:32
Resolved date:
10/Feb/12 19:15
