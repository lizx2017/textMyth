Summary:
IntervalTree could miscalculate its max
Description:
The implementation of IntervalTree in trunk expects an ordered list of Interval objects as the argument to its constructor. It uses the ordering (only) to determine its minimum and maximum endpoints out of all Intervals stored in it. However, no ordering should be able to guarantee the first element has the set-wide minimum and that the last element has the set-wide maximum; you have to order by minima or maxima or some combination.
I propose that the requirement for ordered input to the IntervalTree constructor be dropped, seeing as how the elements will be sorted as necessary inside the IntervalNode object anyway. The set-wide minimum and maximum could be more straightforwardly calculated inside IntervalNode, and just exposed via IntervalTree.
Status:
RESOLVED
Priority:
Low
Resolution:
Fixed
Affects_version:

Fix_version:
1.0.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
paul cannon
Reporter:
paul cannon
Create date:
06/Sep/11 22:02
Update date:
16/Apr/19 09:32
Resolved date:
07/Sep/11 18:28
