Summary:
CQL3 should not allow ranges on the partition key without the token() method, even for byte ordered partitioner.
Description:
When the partition is an ordered one, CQL3 currently allows non-equal conditions on the partition key directly. I.e. we allow
CREATE TABLE t (k timeuuid PRIMARY KEY);
SELECT * FROM t WHERE k > ... AND k < ...;
but this is a bug because even ordered partitioner don't order following the type of the partition key. They order by bytes, always.
So that type of query doesn't do in general what it is supposed to do and we should disallow it. Even for ordered partitioner, the token() function should be used.
Status:
RESOLVED
Priority:
Normal
Resolution:
Fixed
Affects_version:

Fix_version:
1.2.6
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Sylvain Lebresne
Reporter:
Sylvain Lebresne
Create date:
19/Jun/13 18:05
Update date:
16/Apr/19 09:32
Resolved date:
20/Jun/13 17:12
