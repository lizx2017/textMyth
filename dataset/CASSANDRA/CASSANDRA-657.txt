Summary:
AntiEntropyService causes lots of errors to be logged during unit tests
Description:
Some examples from a successful test run on trunk:
java.io.IOException: Reached an EOL or something bizzare occured. Reading from: /127.0.0.1 BufferSizeRemaining: 16
at org.apache.cassandra.net.io.StartState.doRead(StartState.java:44)
at org.apache.cassandra.net.io.ProtocolState.read(ProtocolState.java:39)
at org.apache.cassandra.net.io.TcpReader.read(TcpReader.java:96)
at org.apache.cassandra.net.TcpConnection$ReadWorkItem.run(TcpConnection.java:444)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
at java.lang.Thread.run(Thread.java:619)
ERROR [TCP Selector Manager] 2009-12-29 16:27:53,244 TcpConnection.java (line 363) Encountered IOException on connection: java.nio.channels.SocketChannel[closed]
java.net.ConnectException: Connection refused
at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:574)
at org.apache.cassandra.net.TcpConnection.connect(TcpConnection.java:341)
at org.apache.cassandra.net.SelectorManager.doProcess(SelectorManager.java:143)
at org.apache.cassandra.net.SelectorManager.run(SelectorManager.java:107)
It's not obvious to me if these are errors in AES, errors in the streaming code, errors caused because the test environment insufficiently resembles a live one, or errors because the test is asking the streaming code to do something that doesn't make sense, but AES is definitely at least immediately responsible.
Status:
RESOLVED
Priority:
Low
Resolution:
Fixed
Affects_version:

Fix_version:
0.6
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Stu Hood
Reporter:
Jonathan Ellis
Create date:
29/Dec/09 21:33
Update date:
16/Apr/19 09:33
Resolved date:
22/Jan/10 19:03
