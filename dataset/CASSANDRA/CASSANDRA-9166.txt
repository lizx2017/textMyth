Summary:
Prepared statements using functions in collection literals aren't invalidated when functions are dropped
Description:
When a function is dropped, any prepared statements which reference it need to be removed from the prepared statement cache.
The default implementation of Term#usesFunction in Term.NonTerminal is not overriden in all the places it should be. The DelayedValue classes in Lists, Sets, Maps and Tuples may all make use of function calls.
CREATE KEYSPACE ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};
CREATE TABLE ks.t1 (k int PRIMARY KEY, v list<int>);
CREATE FUNCTION ks.echo_int(input int) RETURNS int LANGUAGE javascript AS 'input';
a prepared statement of the form:
INSERT INTO ks.t1 (k, v) VALUES (?, [ks.echo_int(?)]);
should be dropped when ks.echo_int(int) is, but currently that isn't the case.
Status:
RESOLVED
Priority:
Normal
Resolution:
Fixed
Affects_version:

Fix_version:
2.2.0 beta 1
Component:
Legacy/CQL
Label:
cql functions
Environment:

Attachment number:
0
Assignee:
Sam Tunnicliffe
Reporter:
Sam Tunnicliffe
Create date:
10/Apr/15 12:08
Update date:
16/Apr/19 09:31
Resolved date:
03/May/15 21:32
