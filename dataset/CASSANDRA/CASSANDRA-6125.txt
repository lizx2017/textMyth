Summary:
Race condition in Gossip propagation
Description:
Gossip propagation has a race when concurrent VersionedValues are created and submitted/propagated, causing some updates to be lost, even if happening on different ApplicationStatuses.
That's what happens basically:
1) A new VersionedValue V1 is created with version X.
2) A new VersionedValue V2 is created with version Y = X + 1.
3) V2 is added to the endpoint state map and propagated.
4) Nodes register Y as max version seen.
5) At this point, V1 is added to the endpoint state map and propagated too.
6) V1 version is X < Y, so nodes do not ask for his value after digests.
A possible solution would be to propagate/track per-ApplicationStatus versions, possibly encoding them to avoid network overhead.
Status:
RESOLVED
Priority:
Normal
Resolution:
Fixed
Affects_version:

Fix_version:
2.0.11, 2.1.1
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Brandon Williams
Reporter:
Sergio Bossa
Create date:
01/Oct/13 19:01
Update date:
16/Apr/19 09:32
Resolved date:
18/Sep/14 21:38
