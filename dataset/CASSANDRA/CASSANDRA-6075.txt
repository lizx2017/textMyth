Summary:
The token function should allow column identifiers in the correct order only
Description:
Given the following table:
CREATE TABLE t1 (a int, b text, PRIMARY KEY ((a, b)));
The following request returns an error in cqlsh as literal arguments order is incorrect:
SELECT * FROM t1 WHERE token(a, b) > token('s', 1);
Bad Request: Type error: 's' cannot be passed as argument 0 of function token of type int
But surprisingly if we provide the column identifier arguments in the wrong order no error is returned:
SELECT * FROM t1 WHERE token(a, b) > token(1, 'a'); // correct order is valid
SELECT * FROM t1 WHERE token(b, a) > token(1, 'a'); // incorrect order is valid as well
Status:
RESOLVED
Priority:
Low
Resolution:
Fixed
Affects_version:

Fix_version:
2.0.11, 2.1.1
Component:
Legacy/CQL
Label:
cql
Environment:

Attachment number:
0
Assignee:
Benjamin Lerer
Reporter:
Michaël Figuière
Create date:
21/Sep/13 02:06
Update date:
16/Apr/19 09:32
Resolved date:
24/Sep/14 02:10
