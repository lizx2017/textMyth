Summary:
Arena allocation causes excessive flushing on small heaps
Description:
adding allocator.size() to Memtable.getLiveSize has two problems:
1) it double-counts allocated parts of regions
2) it makes the size of an empty memtable the size of a single region
(2) is a particular problem because flushing a nearly-empty memtable will not actually free up much memory â€“ we just trade one almost-empty region, for another. In testing, I even saw this happening to the low-traffic system tables like LocationInfo.
Status:
RESOLVED
Priority:
Normal
Resolution:
Fixed
Affects_version:

Fix_version:
1.0.0
Component:
None
Label:
None
Environment:

Attachment number:
0
Assignee:
Jonathan Ellis
Reporter:
Jonathan Ellis
Create date:
09/Sep/11 13:52
Update date:
16/Apr/19 09:32
Resolved date:
12/Sep/11 15:50
